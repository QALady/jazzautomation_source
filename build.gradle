#!groovy

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin:'application'
mainClassName = 'com.jazzautomation.AutomationDriver'

apply from: "${project.projectDir}/gradle/dependencies.gradle"

sourceCompatibility = 1.7
targetCompatibility = 1.7


repositories {
	mavenCentral()
  ivy {
            artifactPattern "http://www.nurflugel.com/Home/repository/[organisation]/[module]/[revision]/[artifact]-[revision].[type]"
            ivyPattern      "http://www.nurflugel.com/Home/repository/[organisation]/[module]/[revision]/[artifact]-[revision].ivy.xml"
  }
}

configurations {
  jre
}

project.ext {
	projectname = 'jazzautomation'
	artifactId = 'com-jazzautomation'
	groupId = group
	versionNumber = 1.0	
}


task show << {
	println relativePath(compileJava.destinationDir)
	println relativePath(processResources.destinationDir)
	println springVersion
}


final path = System.properties.find { it.key == "java.home" }.toString()
path=path.split("=")[1]
def javaHomeDir=new File(path).parent

apply from: "${project.projectDir}/gradle/dependencies.gradle"
apply from: "${project.projectDir}/gradle/appbundler.gradle"
//apply from: "${project.projectDir}/gradle/javafxbundler.gradle"


println """\

========================================================================================================
Welcome to Gradle!  This is version: $gradle.gradleVersion
              Gradle home is set to: $gradle.gradleHomeDir
    Gradle user directory is set to: $gradle.gradleUserHomeDir
                Java home is set to: $javaHomeDir
                      mainClassName: $mainClassName

                     Base directory: $projectDir


Running build script ${relativePath(buildFile)}
========================================================================================================

"""
task runJazz (type: JavaExec, dependsOn: 'classes', description: 'Run test automation locally'){

	main = 'com.jazzautomation.AutomationDriver'
	classpath = sourceSets.main.runtimeClasspath

	List jvmArgsList = jvmArgs
	if (project.hasProperty("jazz_configs"))
	{
		jvmArgsList.add('-Djazz.configs=' + jazz_configs)
	}
	
	if (project.hasProperty("jazz_reports"))
	{
		jvmArgsList.add('-Djazz.reports=' + jazz_reports)
	}
	
	if (project.hasProperty("remote"))
	{
		jvmArgsList.add('-Dremote=' + remote)
	}
		
	if (project.hasProperty("browsers"))
	{
		jvmArgsList.add('-Dbrowsers=' + browsers)
	}

	if (project.hasProperty("features"))
	{
		jvmArgsList.add('-Dfeatures=' + features)
	}
		
		
	jvmArgs jvmArgsList
			
}

task jazzJar(type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.resources)    
    from configurations.runtime.asFileTree.files.collect { zipTree(it) }

    manifest {
        attributes 'Main-Class': 'com.jazzautomation.AutomationDriver'
    }
}

eclipse {
	jdt {
	  //if you want to alter the java versions (by default they are configured with gradle java plugin settings):
	  sourceCompatibility = 1.7
	  targetCompatibility = 1.7
	}
  }

idea {
	module {
	  downloadSources=true
	}
  }
  